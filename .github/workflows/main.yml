name: ci-cd

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Docker image tag to short Git SHA
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV  # Ensure IMAGE_TAG is set

      - name: Debug IMAGE_TAG before SSH action
        run: echo "IMAGE_TAG is $IMAGE_TAG"  # Print IMAGE_TAG value to debug if it's set properly

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        run: |
          docker build -t hassanb111/gradlink:${IMAGE_TAG} .
          docker push hassanb111/gradlink:${IMAGE_TAG}

      - name: SSH and deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASS }}
          script: |
            echo "IMAGE_TAG is ${IMAGE_TAG}"  # Debugging the IMAGE_TAG value
            if [ -z "$IMAGE_TAG" ]; then
              echo "Error: IMAGE_TAG is empty or not set.";
              exit 1;
            fi
            docker pull hassanb111/gradlink:${IMAGE_TAG}
            docker stop gradlink || true
            docker rm gradlink || true
            docker run -d --name gradlink -p 5000:8080 hassanb111/gradlink:${IMAGE_TAG}
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}  # Ensure IMAGE_TAG is passed to SSH step
